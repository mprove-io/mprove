{
  "version": 2,
  "projects": {
    "top": {
      "root": ".",
      "targets": {
        "pj": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "ts-node ./tools/utils/prepare-package-json-for-docker"
            ],
            "parallel": false,
            "outputPath": "package.docker.json"
          }
        },
        "steps": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "nx affected --target=build",
              "nx affected --target=test",
              "nx pj top",
              "nx affected --target=up",
              "nx affected --target=e2e"
            ],
            "parallel": false
          }
        },
        "steps-all": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "nx run-many --target=build --all",
              "nx run-many --target=test --all",
              "nx pj top",
              "nx run-many --target=up --all",
              "nx run-many --target=e2e --all"
            ],
            "parallel": false
          }
        }
      }
    },
    "disk": {
      "root": "apps/disk",
      "sourceRoot": "apps/disk/src",
      "projectType": "application",
      "prefix": "disk",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/disk",
            "main": "apps/disk/src/main.ts",
            "tsConfig": "apps/disk/tsconfig.app.json",
            "assets": ["apps/disk/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "disk:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/disk/**/*.ts"]
          }
        },
        "build-tests": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rimraf \"./dist/tests/disk\"",
              "tsc --project apps/disk/tsconfig.test.json"
            ],
            "parallel": false,
            "outputPath": "dist/tests/disk"
          }
        },
        "test": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "nx build-tests disk --with-deps",
              "ava --config=ava-js.config.js dist/tests/disk/apps/disk/**/*.spec.js"
            ],
            "parallel": false
          }
        },
        "format": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "prettier \"apps/disk/**/*.{ts,js,json,scss,html,md}\" --write --config .prettierrc.yaml"
            ],
            "parallel": false
          }
        },
        "circular": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["madge --circular apps/disk"],
            "parallel": false
          }
        },
        "build-docker": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "tools/deploy/base-dev",
            "commands": ["docker-compose up --detach --build disk"],
            "parallel": false
          }
        },
        "up": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["nx pj top", "nx build-docker disk"],
            "parallel": false
          }
        }
      }
    },
    "blockml": {
      "root": "apps/blockml",
      "sourceRoot": "apps/blockml/src",
      "projectType": "application",
      "prefix": "blockml",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/blockml",
            "main": "apps/blockml/src/main.ts",
            "tsConfig": "apps/blockml/tsconfig.app.json",
            "assets": ["apps/blockml/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "blockml:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/blockml/**/*.ts"]
          }
        },
        "clean-logs": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["rimraf \"./apps/blockml/src/models/**/logs/*.log\""],
            "parallel": false
          }
        },
        "build-tests": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rimraf \"./dist/tests/blockml\"",
              "tsc --project apps/blockml/tsconfig.test.json"
            ],
            "parallel": false,
            "outputPath": "dist/tests/blockml"
          }
        },
        "test": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "nx clean-logs blockml",
              "nx build-tests blockml --with-deps",
              "ava --config=ava-js.config.js dist/tests/blockml/apps/blockml/**/*.spec.js"
            ],
            "parallel": false
          }
        },
        "format": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "prettier \"apps/blockml/**/*.{ts,js,json,scss,html,md}\" --write --config .prettierrc.yaml"
            ],
            "parallel": false
          }
        },
        "circular": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["madge --circular apps/blockml"],
            "parallel": false
          }
        },
        "build-docker": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "tools/deploy/base-dev",
            "commands": [
              "docker-compose up --detach --build blockml-main",
              "docker-compose up --detach --build blockml-worker"
            ],
            "parallel": false
          }
        },
        "up": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["nx pj top", "nx build-docker blockml"],
            "parallel": false
          }
        }
      }
    },
    "backend": {
      "root": "apps/backend",
      "sourceRoot": "apps/backend/src",
      "projectType": "application",
      "prefix": "backend",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/backend",
            "main": "apps/backend/src/main.ts",
            "tsConfig": "apps/backend/tsconfig.app.json",
            "assets": ["apps/backend/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "backend:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/backend/**/*.ts"]
          }
        },
        "build-tests": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rimraf \"./dist/tests/backend\"",
              "tsc --project apps/backend/tsconfig.test.json"
            ],
            "parallel": false,
            "outputPath": "dist/tests/backend"
          }
        },
        "e2e": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "nx build-tests backend --with-deps",
              "ava --config=ava-js-e2e.config.js dist/tests/backend/apps/backend/**/*.e2e-spec.js"
            ],
            "parallel": false
          }
        },
        "format": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "prettier \"apps/backend/**/*.{ts,js,json,scss,html,md}\" --write --config .prettierrc.yaml"
            ],
            "parallel": false
          }
        },
        "circular": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["madge --circular apps/backend"],
            "parallel": false
          }
        },
        "build-docker": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "cwd": "tools/deploy/base-dev",
            "commands": [
              "docker-compose up --detach --build backend-scheduler",
              "docker-compose up --detach --build backend"
            ],
            "parallel": false
          }
        },
        "up": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["nx pj top", "nx build-docker backend"],
            "parallel": false
          }
        }
      }
    },
    "api-to-backend": {
      "root": "libs/api-to-backend",
      "sourceRoot": "libs/api-to-backend/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api-to-backend/**/*.ts"]
          }
        },
        "build-tests": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rimraf \"./dist/tests/api-to-backend\"",
              "tsc --project libs/api-to-backend/tsconfig.test.json"
            ],
            "parallel": false,
            "outputPath": "dist/tests/api-to-backend"
          }
        },
        "format": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "prettier \"libs/api-to-backend/**/*.{ts,js,json,scss,html,md}\" --write --config .prettierrc.yaml"
            ],
            "parallel": false
          }
        },
        "circular": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["madge --circular libs/api-to-backend"],
            "parallel": false
          }
        }
      }
    },
    "api-to-blockml": {
      "root": "libs/api-to-blockml",
      "sourceRoot": "libs/api-to-blockml/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api-to-blockml/**/*.ts"]
          }
        },
        "build-tests": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rimraf \"./dist/tests/api-to-blockml\"",
              "tsc --project libs/api-to-blockml/tsconfig.test.json"
            ],
            "parallel": false,
            "outputPath": "dist/tests/api-to-blockml"
          }
        },
        "format": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "prettier \"libs/api-to-blockml/**/*.{ts,js,json,scss,html,md}\" --write --config .prettierrc.yaml"
            ],
            "parallel": false
          }
        },
        "circular": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["madge --circular libs/api-to-blockml"],
            "parallel": false
          }
        }
      }
    },
    "api-to-disk": {
      "root": "libs/api-to-disk",
      "sourceRoot": "libs/api-to-disk/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api-to-disk/**/*.ts"]
          }
        },
        "build-tests": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rimraf \"./dist/tests/api-to-disk\"",
              "tsc --project libs/api-to-disk/tsconfig.test.json"
            ],
            "parallel": false,
            "outputPath": "dist/tests/api-to-disk"
          }
        },
        "format": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "prettier \"libs/api-to-disk/**/*.{ts,js,json,scss,html,md}\" --write --config .prettierrc.yaml"
            ],
            "parallel": false
          }
        },
        "circular": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["madge --circular libs/api-to-disk"],
            "parallel": false
          }
        }
      }
    },
    "common": {
      "root": "libs/common",
      "sourceRoot": "libs/common/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/common/**/*.ts"]
          }
        },
        "build-tests": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "rimraf \"./dist/tests/common\"",
              "tsc --project libs/common/tsconfig.test.json"
            ],
            "parallel": false,
            "outputPath": "dist/tests/common"
          }
        },
        "format": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "prettier \"libs/common/**/*.{ts,js,json,scss,html,md}\" --write --config .prettierrc.yaml"
            ],
            "parallel": false
          }
        },
        "circular": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": ["madge --circular libs/common"],
            "parallel": false
          }
        }
      }
    },
    "front": {
      "projectType": "application",
      "root": "apps/front",
      "sourceRoot": "apps/front/src",
      "prefix": "mprove",
      "targets": {
        "build": {
          "executor": "@angular-devkit/build-angular:browser",
          "options": {
            "allowedCommonJsDependencies": ["validator"],
            "outputPath": "dist/apps/front",
            "index": "apps/front/src/index.html",
            "main": "apps/front/src/main.ts",
            "polyfills": "apps/front/src/polyfills.ts",
            "tsConfig": "apps/front/tsconfig.app.json",
            "aot": true,
            "assets": ["apps/front/src/favicon.ico", "apps/front/src/assets"],
            "styles": ["apps/front/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/front/src/environments/environment.ts",
                  "with": "apps/front/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "front:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "front:build:production"
            }
          }
        },
        "extract-i18n": {
          "executor": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "front:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/front/src/**/*.ts",
              "apps/front/src/**/*.html"
            ]
          }
        }
      }
    },
    "front-e2e": {
      "root": "apps/front-e2e",
      "sourceRoot": "apps/front-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/front-e2e/cypress.json",
            "tsConfig": "apps/front-e2e/tsconfig.e2e.json",
            "devServerTarget": "front:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "front:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/front-e2e/**/*.{js,ts}"]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/nest"
  },
  "defaultProject": "disk",
  "generators": {
    "@nrwl/angular:application": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest"
    },
    "@nrwl/angular:component": {
      "style": "scss"
    }
  }
}
