apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockml-worker
  labels:
    app: blockml-worker
spec:
  replicas: 0
  selector:
    matchLabels:
      app: blockml-worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: blockml-worker
      annotations:
        # sidecar.istio.io/proxyCPU: "100m"   
        checksum/secret-blockml-common-envs: '{{ include (print $.Template.BasePath "/secret-blockml-common-envs.yaml") . | sha256sum }}'        
    spec:
      imagePullSecrets:
      - name: registrysecret    
      containers:
      - name: blockml-worker
        resources:
          limits:
            memory: "2000Mi"        
          # requests:
          #   memory: "2000Mi"
            # cpu: "100m"
        image: {{ .Values.werf.image.blockml }}
        command:  
        - sh
        - '-c'
        - >
          until wget http://$BLOCKML_RABBIT_USER:$BLOCKML_RABBIT_PASS@$BLOCKML_RABBIT_HOST:15672/api/aliveness-test/%2F > /dev/null 2>&1; 
          do echo waiting for rabbit ...; sleep 10; done && 
          echo rabbit is ready &&
          yarn serve:blockml  
        env:
        - name: BLOCKML_IS_WORKER
          value: 'TRUE'                
        envFrom:
        - secretRef:
            name: blockml-common-envs
        ports:
        - containerPort: 9229
          name: blockml-w-debug

---
apiVersion: v1
kind: Service
metadata:
  name: blockml-worker
  labels:
    app: blockml-worker
spec:
  selector:
    app: blockml-worker
  type: NodePort
  ports:
  - port: 9235
    targetPort: 9229
    name: blockml-w-debug                         

