version: '3.7'
services:
  db:
    image: mysql:8.0.29
    environment:
      - MYSQL_ROOT_PASSWORD=$COMPOSE_DB_MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$COMPOSE_DB_MYSQL_DATABASE
    command:
      [
        '--default-authentication-plugin=mysql_native_password',
        '--max_allowed_packet=128M',
        '--innodb-buffer-pool-size=1G'
      ]
    ports:
      - 3306:3306
    volumes:
      - type: bind
        source: $COMPOSE_DB_VOLUME_SOURCE_PATH
        target: /var/lib/mysql

  rabbit:
    image: rabbitmq:3.10.6-management
    environment:
      - RABBITMQ_DEFAULT_USER=$COMPOSE_RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS=$COMPOSE_RABBITMQ_DEFAULT_PASS
      - RABBITMQ_ERLANG_COOKIE=$COMPOSE_RABBITMQ_ERLANG_COOKIE
    ports:
      - 5672:5672
      - 15672:15672

  backend:
    build:
      context: ./
      dockerfile: tools/docker/backend.prod.Dockerfile
    env_file:
      - $ENV_FILE_PATH
    environment:
      BACKEND_IS_SCHEDULER: 'FALSE'
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: $ENV_FILE_SOURCE_PATH
        target: $ENV_FILE_TARGET_PATH
      - type: bind
        source: $COMPOSE_BACKEND_BIGQUERY_TEST_CREDENTIALS_SOURCE_PATH
        target: $COMPOSE_BACKEND_BIGQUERY_TEST_CREDENTIALS_PATH

  backend-scheduler:
    build:
      context: ./
      dockerfile: tools/docker/backend.prod.Dockerfile
    env_file:
      - $ENV_FILE_PATH
    environment:
      BACKEND_IS_SCHEDULER: 'TRUE'
    volumes:
      - type: bind
        source: $ENV_FILE_SOURCE_PATH
        target: $ENV_FILE_TARGET_PATH
      - type: bind
        source: $COMPOSE_BACKEND_BIGQUERY_TEST_CREDENTIALS_SOURCE_PATH
        target: $COMPOSE_BACKEND_BIGQUERY_TEST_CREDENTIALS_PATH

  blockml-main:
    build:
      context: ./
      dockerfile: tools/docker/blockml.prod.Dockerfile
    env_file:
      - $ENV_FILE_PATH
    environment:
      BLOCKML_IS_SINGLE: 'FALSE'
      BLOCKML_IS_MAIN: 'TRUE'
      BLOCKML_IS_WORKER: 'FALSE'
    ports:
      - 3001:3001
    volumes:
      - type: bind
        source: $ENV_FILE_SOURCE_PATH
        target: $ENV_FILE_TARGET_PATH

  blockml-worker:
    build:
      context: ./
      dockerfile: tools/docker/blockml.prod.Dockerfile
    env_file:
      - $ENV_FILE_PATH
    environment:
      BLOCKML_IS_SINGLE: 'FALSE'
      BLOCKML_IS_MAIN: 'FALSE'
      BLOCKML_IS_WORKER: 'TRUE'
    volumes:
      - type: bind
        source: $ENV_FILE_SOURCE_PATH
        target: $ENV_FILE_TARGET_PATH

  disk:
    build:
      context: ./
      dockerfile: tools/docker/disk.prod.Dockerfile
    env_file:
      - $ENV_FILE_PATH
    ports:
      - 3002:3002
    volumes:
      - type: bind
        source: $ENV_FILE_SOURCE_PATH
        target: $ENV_FILE_TARGET_PATH
      - type: bind
        source: $COMPOSE_DISK_ORGANIZATIONS_VOLUME_SOURCE_PATH
        target: $COMPOSE_DISK_ORGANIZATIONS_VOLUME_PATH

  front:
    build:
      context: ./
      dockerfile: tools/docker/front.prod.Dockerfile
    ports:
      - 3003:80

  integra:
    build:
      context: ./
      dockerfile: tools/docker/integra.Dockerfile

  dwh-postgres:
    image: postgres:13.5
    environment:
      - POSTGRES_USER=$COMPOSE_DWH_POSTGRES_USER
      - POSTGRES_PASSWORD=$COMPOSE_DWH_POSTGRES_PASSWORD
      - POSTGRES_DB=$COMPOSE_DWH_POSTGRES_DB
    ports:
      - 5432:5432
    volumes:
      - type: bind
        source: $COMPOSE_DWH_POSTGRES_VOLUME_SOURCE_PATH
        target: /var/lib/postgresql/data

  dwh-clickhouse:
    image: yandex/clickhouse-server:21.11.7.9
    environment:
      - CLICKHOUSE_USER=$COMPOSE_DWH_CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD=$COMPOSE_DWH_CLICKHOUSE_PASSWORD
      - CLICKHOUSE_DB=$COMPOSE_DWH_CLICKHOUSE_DB
    ports:
      - 8123:8123
      - 9000:9000
    volumes:
      - type: bind
        source: $COMPOSE_DWH_CLICKHOUSE_VOLUME_SOURCE_PATH
        target: /var/lib/clickhouse
      - type: bind
        source: $COMPOSE_DWH_CLICKHOUSE_LOGS_VOLUME_SOURCE_PATH
        target: /var/log/clickhouse-server

  # tabix:
  #     image: spoonest/clickhouse-tabix-web-client
  #     ports:
  #       - 8124:80 

  x11-bridge:
    image: jare/x11-bridge
    volumes:
      - $COMPOSE_X11_BRIDGE_SOURCE_PATH:/tmp/.X11-unix:rw
    ports:
      - 8888:8888
    environment:
      - MODE=$COMPOSE_X11_BRIDGE_MODE
      - DISPLAY=$COMPOSE_X11_BRIDGE_DISPLAY
      - XPRA_HTML=$COMPOSE_X11_BRIDGE_XPRA_HTML
      - XPRA_TCP_PORT=$COMPOSE_X11_BRIDGE_XPRA_TCP_PORT
      - XPRA_PASSWORD=$COMPOSE_X11_BRIDGE_XPRA_PASSWORD
